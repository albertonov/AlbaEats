DROP TABLE PRODUCTO_OBJ;
CREATE TABLE PRODUCTO_TAB OF PRODUCTO_OBJ (
    id_producto PRIMARY KEY,
    nombre NOT NULL,
    CHECK(precio_unit >0),
    CHECK(stock >0)
);

DROP TABLE RESTAURANTE_OBJ;
CREATE TABLE RESTAURANTE_TAB OF RESTAURANTE_OBJ (
    id_restaurante PRIMARY KEY,
    nombre NOT NULL,
    direccion NOT NULL,
    ciudad NOT NULL,
    telefono NOT NULL,
    producto SCOPE IS PRODUCTO_TAB
);


DROP TABLE MECANICO_TAB;
CREATE TABLE MECANICO_TAB OF MECANICO_OBJ (
    dni PRIMARY KEY,
    nombre NOT NULL,
    empresa NOT NULL
);

DROP TABLE LFACTURA_TAB;
CREATE TABLE LFACTURA_TAB OF LFACTURA_OBJ(
    id_factura PRIMARY KEY,
    CHECK(precio > 0),
    CHECK(cantidad > 0)
);

DROP TABLE CLIENTE_TAB;
CREATE TABLE CLIENTE_TAB OF CLIENTE_OBJ (
    id_usuario  PRIMARY KEY,
    nombre NOT NULL,
    telefono NOT NULL,
    correoE NOT NULL,
    ciudad NOT NULL,
    direccion NOT NULL,
    codigo_postal NOT NULL
);

CREATE TABLE VEHICULO_TAB OF VEHICULO_OBJ(
    matricula PRIMARY KEY
);

DROP TABLE VEHGASOLINA_TAB;
CREATE TABLE VEHGASOLINA_TAB OF VEHGASOLINA_OBJ (
    matricula  PRIMARY KEY,
    SCOPE FOR (mecanico) IS MECANICO_TAB,
    tipolicencia NOT NULL
);

DROP TABLE VEHELECTRICO_TAB;
CREATE TABLE VEHELECTRICO_TAB OF VEHELECTRICO_OBJ (
    matricula  PRIMARY KEY,
    SCOPE FOR (mecanico) IS MECANICO_TAB,
    autonomia NOT NULL
);


DROP TABLE REPARTIDOR_TAB;
CREATE TABLE REPARTIDOR_TAB OF REPARTIDOR_OBJ(
    id_usuario  PRIMARY KEY,
    nombre NOT NULL,
    telefono NOT NULL,
    correoE NOT NULL,
    ciudad NOT NULL,
    dni  UNIQUE,
    numeross UNIQUE,
    fechaalta NOT NULL,
    SCOPE FOR (vehiculo) IS VEHICULO_TAB
);




----------REPLACE LOS TYPES de PRODUCTLIST Y DE OFERTA OBJ PARA PROBAR
CREATE  OR REPLACE TYPE PRODUCTLIST AS TABLE OF  REF PRODUCTO_OBJ;

create or replace TYPE OFERTA_OBJ AS OBJECT(
codigo_oferta NUMBER(6),
descuento NUMBER(2),
maximo_descuento NUMBER(2),
finalizacion DATE,
producto PRODUCTLIST,
cliente REF CLIENTE_OBJ
);



DROP TABLE OFERTA_TAB;
CREATE TABLE OFERTA_TAB OF OFERTA_OBJ (
    codigo_oferta   PRIMARY KEY,
    NESTED TABLE PRODUCTLIST STORE AS PRODUCTO_OBJ
);





-- A PARTIR DE AQUI NO ESTA PROBADO QUE FUNCIONE, HAY QUE RESETEAR LA BBDD




DROP TABLE LPEDIDO_TAB;
CREATE TABLE LPEDIDO_TAB OF LPEDIDO_OBJ(
    id_lpedido PRIMARY KEY,
    CHECK (cantidad>0),
    SCOPE FOR (producto) IS PRODUCTO_TAB,
    SCOPE FOR (lfactura) IS LFACTURA_TAB
);


DROP TABLE PEDIDO_TAB;
CREATE TABLE PEDIDO_TAB OF PEDIDO_OBJ(
    id_pedido PRIMARY KEY,
    precio NOT NULL,
    fecha NOT NULL,
    urgencia NOT NULL,
    CHECK (urgencia > 0),
    CHECK (urgencia <=4),
    SCOPE FOR (lpedido) IS LPEDIDO_TAB,
    SCOPE FOR (repartidor) IS REPARTIDO_TAB,
    SCOPE FOR (pedido) IS PEDIDO_TAB
    
);


DROP TABLE FACTURA_TAB;
CREATE TABLE FACTURA_TAB OF FACTURA_OBJ(
    id_factura PRIMARY KEY,
    importe NOT NULL,
    CHECK(importe >= 0),
    SCOPE FOR (lfactura) IS LFACTURA_TAB

);

DROP TABLE METODOPAGO_TAB;
CREATE TABLE METODOPAGO_TAB OF METODOPAGO_OBJ(
    idpago PRIMARY KEY,
    SCOPE FOR (cliente) IS CLIENTE_TAB
);

DROP TABLE TARJETA_TAB;
CREATE TABLE TARJETA_TAB OF TARJETA_OBJ(
    idpago PRIMARY KEY,
    SCOPE FOR (cliente) IS CLIENTE_TAB,
    numero UNIQUE,
    propietario NOT NULL,
    cvv NOT NULL
);

DROP TABLE CONTRAREEMBOLSO_TAB;
CREATE TABLE CONTRAREEMBOLSO_TAB OF CONTRAREEMBOLSO_OBJ(
    idpago PRIMARY KEY,
    SCOPE FOR (cliente) IS CLIENTE_TAB,
    cambio NOT NULL
);
